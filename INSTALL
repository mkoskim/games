This project has been made with:

    - Linux Mint 64-bit (Current: 17.2 Rafaela)
    - DMD compiler (current: 2.069.0-b2)
    
It is far from easy to be compiled on other platforms at the moment. I try
later simplify the process in the future.

To successfully compile and run projects, you will need:

1) SYSTEM LIBRARIES

   Linux users may find these from their distribution's repository, if not,
   you can install them from sources.

        * OpenGL 2.1+         For graphics
        * SDL 2               Input, CPU side graphics, ...
        * SDL 2 TTF           For loading & rendering fonts
        * SDL 2 Image         For loading images
        * Assimp 3.0+         For loading 3D models
   
   Your system should have support at least for PNG images. I'm not sure how
   std.zip is implemented, but it may require zlib. Luckily, both are
   usually installed by default in Linux systems.

   You will need at least OpenGL 2.1. I have currently been planning to move
   on to OpenGL 3.3, because it has many nice features to study closer.

2) BUILD TOOLS:

   Usual Linux-side building tools:

   * GNU make

   This is usually installed to Linux systems by default. NOTE: Preliminary
   dub building support exists.

3) DMD D COMPILER:

   This is easy to install to both Linux and Windows, and
   you can get it here:

        http://dlang.org/download.html

   Previous version I was using was 2.067.1. I installed new version (2.069.0-b2)
   recently, and it seems to work.

4) DUB

   Project uses D libraries via dub. It can be downloaded here:
   
        http://code.dlang.org/download
        
   Currently I am using version 0.9.24.

5) D LIBRARIES

   The project uses:

        * derelict: For OpenGL, SDL2 and Assimp3 bindings
        * gl3n: 3D maths

   There is preliminary support in Makefile to fetch these. Go in one of the
   project directories, and type 'make fetch', for example:
   
        $ cd testbench/pacman
        testbench/pacman$ make fetch

6) If everything is fine, you can compile and run some of the examples
   using make:

      testbench/pacman$ make default

Sadly to Windows users, current build system utilizes common Linux side
building tools and symbolic links. I will continue to simplify the build.

- - -

GAME CONTROLLER: Now, with emulated controller, games can be basically played
without having a real one. But it is still recommended. My games are and will be
made to be played with game controller (XBox).

